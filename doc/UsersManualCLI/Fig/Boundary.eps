%!PS-Adobe-3.0
%%Creator: cairo 1.16.0 (https://cairographics.org)
%%CreationDate: Wed Oct  9 08:59:13 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: A4 595 842 0 () ()
%%BoundingBox: 279 371 449 438
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: A4
%%PageBoundingBox: 279 371 449 438
595 842 cairo_set_page_size
%%EndPageSetup
q 279 371 170 67 rectclip
1 0 0 -1 0 842 cm q
0 g
311.895 406.082 m 321.297 425.148 l 342.32 428.203 l 327.105 443.043 l 
330.699 464 l 311.895 454.105 l 293.094 464 l 296.684 443.043 l 281.473 
428.203 l 302.492 425.148 l h
311.895 406.082 m f
0.80038 w
0 J
0 j
[] 0.0 d
4 M q 0.999189 0 0 1 0 0 cm
312.148 406.082 m 321.558 425.148 l 342.598 428.203 l 327.371 443.043 l
 330.968 464 l 312.148 454.105 l 293.332 464 l 296.924 443.043 l 281.701
 428.203 l 302.738 425.148 l h
312.148 406.082 m S Q
415.859 406.082 m 425.262 425.148 l 446.285 428.203 l 431.07 443.043 l 
434.664 464 l 415.859 454.105 l 397.059 464 l 400.648 443.043 l 385.438 
428.203 l 406.457 425.148 l h
415.859 406.082 m f
q 0.999189 0 0 1 0 0 cm
416.197 406.082 m 425.607 425.148 l 446.647 428.203 l 431.42 443.043 l 
435.017 464 l 416.197 454.105 l 397.381 464 l 400.974 443.043 l 385.75 428.203
 l 406.787 425.148 l h
416.197 406.082 m S Q
[ 1.60076 0.80038] 0 d
q 0.999189 0 0 1 0 0 cm
280.133 406.082 64.028 60.027 re S Q
[ 1.60076 0.80038] 0 d
q 0.999189 0 0 1 0 0 cm
448.211 438.098 m 448.211 455.781 433.879 470.113 416.197 470.113 c 398.515
 470.113 384.183 455.781 384.183 438.098 c 384.183 420.418 398.515 406.082
 416.197 406.082 c 433.879 406.082 448.211 420.418 448.211 438.098 c h
448.211 438.098 m S Q
Q Q
showpage
%%Trailer
%%EOF
