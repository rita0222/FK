%!PS-Adobe-3.0
%%Creator: cairo 1.16.0 (https://cairographics.org)
%%CreationDate: Wed Oct  9 08:59:13 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: A4 595 842 0 () ()
%%BoundingBox: 277 419 303 446
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: A4
%%PageBoundingBox: 277 419 303 446
595 842 cairo_set_page_size
%%EndPageSetup
q 277 419 26 27 rectclip
1 0 0 -1 0 842 cm q
0 g
0.080038 w
0 J
0 j
[] 0.0 d
4 M q 0.999189 0 0 1 0 0 cm
284.137 409.285 m 283.335 412.484 l 284.934 412.484 l 284.137 409.285 l
 S Q
q 0.999189 0 0 1 0 0 cm
288.937 401.281 m 288.136 404.48 l 289.739 404.48 l 288.937 401.281 l S Q
q 0.999189 0 0 1 0 0 cm
289.739 415.688 m 288.937 418.891 l 290.536 418.891 l 289.739 415.688 l
 S Q
q 0.999189 0 0 1 0 0 cm
298.543 412.484 m 297.741 415.688 l 299.34 415.688 l 298.543 412.484 l S Q
291.902 407.684 m 291.102 410.887 l 292.703 410.887 l 291.902 407.684 l
 f
q 0.999189 0 0 1 0 0 cm
292.139 407.684 m 291.338 410.887 l 292.941 410.887 l 292.139 407.684 l
 S Q
q 0.999189 0 0 1 0 0 cm
296.94 403.68 m 296.142 406.883 l 297.741 406.883 l 296.94 403.68 l S Q
q 0.999189 0 0 1 0 0 cm
295.341 396.477 m 294.54 399.68 l 296.142 399.68 l 295.341 396.477 l S Q
0.160076 w
q 0.999189 0 0 1 0 0 cm
296.94 405.281 m 298.543 402.883 l S Q
297.945 403.414 m 298.035 403.859 l 298.387 402.746 l 297.5 403.504 l h
297.945 403.414 m f*
0.0665957 w
q -0.666126 1 -0.999189 -0.666667 0 0 cm
141.662 -392.628 m 141.929 -392.896 l 140.996 -392.626 l 141.93 -392.361
 l h
141.662 -392.628 m S Q
0.160076 w
q 0.999189 0 0 1 0 0 cm
298.543 414.086 m 300.943 416.488 l S Q
300.246 416.035 m 299.793 416.035 l 300.812 416.602 l 300.246 415.582 l
 h
300.246 416.035 m f*
0.0565954 w
q -0.999189 -1 0.999189 -1 0 0 cm
-358.262 -57.773 m -358.036 -57.999 l -358.829 -57.772 l -358.036 -57.546
 l h
-358.262 -57.773 m S Q
0.160076 w
q 0.999189 0 0 1 0 0 cm
289.739 417.289 m 288.136 420.488 l S Q
288.188 419.918 m 288.047 419.488 l 287.832 420.633 l 288.617 419.773 l
 h
288.188 419.918 m f*
0.0715882 w
q 0.499595 -1 0.999189 0.5 0 0 cm
-220.566 398.704 m -220.278 398.42 l -221.28 398.706 l -220.278 398.991
 l h
-220.566 398.704 m S Q
0.160076 w
q 0.999189 0 0 1 0 0 cm
284.137 411.684 m 280.133 412.484 l S Q
280.535 412.359 m 280.785 411.984 l 279.75 412.516 l 280.91 412.609 l h
280.535 412.359 m f*
0.0784837 w
q 0.999189 -0.2 0.199838 1 0 0 cm
190.664 450.492 m 190.977 450.18 l 189.879 450.491 l 190.977 450.805 l 
h
190.664 450.492 m S Q
0.160076 w
q 0.999189 0 0 1 0 0 cm
288.937 403.68 m 288.136 402.883 286.537 400.48 286.537 400.48 c S Q
286.66 401.012 m 287.102 401.102 l 286.215 400.348 l 286.57 401.457 l h
286.66 401.012 m f*
0.0665957 w
q 0.666126 1 -0.999189 0.666667 0 0 cm
410.036 -13.536 m 410.302 -13.8 l 409.37 -13.534 l 410.302 -13.268 l h
410.036 -13.536 m S Q
0.080038 w
[ 0.080038 0.480228] 0 d
q 0.999189 0 0 1 0 0 cm
300.142 410.086 m 300.142 414.504 296.561 418.09 292.139 418.09 c 287.718
 418.09 284.137 414.504 284.137 410.086 c 284.137 405.664 287.718 402.082
 292.139 402.082 c 296.561 402.082 300.142 405.664 300.142 410.086 c h
300.142 410.086 m S Q
Q Q
showpage
%%Trailer
%%EOF
